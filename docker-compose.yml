version: '3.8'
services:
  auth:
    build: ./backend/auth
    ports: ["8001:8000"]
    env_file: .env
  admin:
    build: ./backend/admin
    ports: ["8002:8000"]
    env_file: .env
  device:
    build: ./backend/device
    ports: ["8003:8000"]
    env_file: .env
  ai:
    build: ./backend/ai
    ports: ["8004:8000"]
    env_file: .env
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      retries: 3
  frontend:
    build: ./frontend
    ports: ["3000:80"]
    env_file: .env
  kafka:
    image: 'bitnami/kafka:3.3'
    user: root
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka:/bitnami/kafka
    depends_on:
      - zookeeper 

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports: ["9000:9000", "9001:9001"]
    env_file: .env
    volumes:
      - minio_data:/data
  db:
    image: timescale/timescaledb:latest-pg14
    restart: always
    ports: ["5432:5432"]
    env_file: .env
    volumes:
      - db_data:/var/lib/postgresql/data
volumes:
  db_data:
  minio_data:
  kafka: {}
